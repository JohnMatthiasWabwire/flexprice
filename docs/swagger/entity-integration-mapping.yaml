openapi: 3.0.3
info:
  title: Entity Integration Mapping API
  description: API for managing entity integration mappings between FlexPrice entities and external payment providers
  version: 1.0.0
  contact:
    name: FlexPrice API Support
    email: api-support@flexprice.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.flexprice.com/v1
    description: Production server
  - url: https://staging-api.flexprice.com/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Local development server

security:
  - ApiKeyAuth: []

paths:
  /entity-integration-mappings:
    get:
      summary: List entity integration mappings
      description: Retrieve a list of entity integration mappings with optional filtering
      operationId: listEntityIntegrationMappings
      parameters:
        - name: entity_id
          in: query
          description: Filter by FlexPrice entity ID
          schema:
            type: string
        - name: entity_type
          in: query
          description: Filter by entity type
          schema:
            type: string
            enum: [customer, plan, invoice, subscription, payment]
        - name: provider_type
          in: query
          description: Filter by provider type
          schema:
            type: string
            enum: [stripe, razorpay, paypal]
        - name: provider_entity_id
          in: query
          description: Filter by provider entity ID
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return (default: 20, max: 100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Pagination offset (default: 0)
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntityIntegrationMappingsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create entity integration mapping
      description: Create a new entity integration mapping
      operationId: createEntityIntegrationMapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityIntegrationMappingRequest'
      responses:
        '201':
          description: Entity integration mapping created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIntegrationMappingResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - mapping already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /entity-integration-mappings/{id}:
    get:
      summary: Get entity integration mapping
      description: Retrieve a specific entity integration mapping by ID
      operationId: getEntityIntegrationMapping
      parameters:
        - name: id
          in: path
          required: true
          description: Entity integration mapping ID
          schema:
            type: string
            pattern: '^eim_[a-zA-Z0-9]+$'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIntegrationMappingResponse'
        '404':
          description: Entity integration mapping not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update entity integration mapping
      description: Update an existing entity integration mapping
      operationId: updateEntityIntegrationMapping
      parameters:
        - name: id
          in: path
          required: true
          description: Entity integration mapping ID
          schema:
            type: string
            pattern: '^eim_[a-zA-Z0-9]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityIntegrationMappingRequest'
      responses:
        '200':
          description: Entity integration mapping updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIntegrationMappingResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity integration mapping not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete entity integration mapping
      description: Delete an entity integration mapping
      operationId: deleteEntityIntegrationMapping
      parameters:
        - name: id
          in: path
          required: true
          description: Entity integration mapping ID
          schema:
            type: string
            pattern: '^eim_[a-zA-Z0-9]+$'
      responses:
        '204':
          description: Entity integration mapping deleted successfully
        '404':
          description: Entity integration mapping not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /entity-integration-mappings/by-entity-and-provider:
    get:
      summary: Get entity integration mapping by entity and provider
      description: Retrieve an entity integration mapping by FlexPrice entity and provider
      operationId: getEntityIntegrationMappingByEntityAndProvider
      parameters:
        - name: entity_id
          in: query
          required: true
          description: FlexPrice entity ID
          schema:
            type: string
        - name: entity_type
          in: query
          required: true
          description: Entity type
          schema:
            type: string
            enum: [customer, plan, invoice, subscription, payment]
        - name: provider_type
          in: query
          required: true
          description: Provider type
          schema:
            type: string
            enum: [stripe, razorpay, paypal]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIntegrationMappingResponse'
        '404':
          description: Entity integration mapping not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /entity-integration-mappings/by-provider-entity:
    get:
      summary: Get entity integration mapping by provider entity
      description: Retrieve an entity integration mapping by provider entity ID
      operationId: getEntityIntegrationMappingByProviderEntity
      parameters:
        - name: provider_type
          in: query
          required: true
          description: Provider type
          schema:
            type: string
            enum: [stripe, razorpay, paypal]
        - name: provider_entity_id
          in: query
          required: true
          description: Provider entity ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIntegrationMappingResponse'
        '404':
          description: Entity integration mapping not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication

  schemas:
    CreateEntityIntegrationMappingRequest:
      type: object
      required:
        - entity_id
        - entity_type
        - provider_type
        - provider_entity_id
      properties:
        entity_id:
          type: string
          description: FlexPrice entity ID
          example: "cust_123"
          maxLength: 255
        entity_type:
          type: string
          description: Entity type
          enum: [customer, plan, invoice, subscription, payment]
          example: "customer"
        provider_type:
          type: string
          description: Provider type
          enum: [stripe, razorpay, paypal]
          example: "stripe"
        provider_entity_id:
          type: string
          description: Provider entity ID
          example: "cus_stripe_456"
          maxLength: 255
        metadata:
          type: object
          description: Additional provider-specific data
          example:
            stripe_customer_email: "user@example.com"
            sync_direction: "flexprice_to_provider"
            webhook_event: "customer.created"

    UpdateEntityIntegrationMappingRequest:
      type: object
      properties:
        entity_id:
          type: string
          description: FlexPrice entity ID
          example: "cust_123"
          maxLength: 255
        entity_type:
          type: string
          description: Entity type
          enum: [customer, plan, invoice, subscription, payment]
          example: "customer"
        provider_type:
          type: string
          description: Provider type
          enum: [stripe, razorpay, paypal]
          example: "stripe"
        provider_entity_id:
          type: string
          description: Provider entity ID
          example: "cus_stripe_456"
          maxLength: 255
        metadata:
          type: object
          description: Additional provider-specific data
          example:
            stripe_customer_email: "updated@example.com"
            sync_direction: "flexprice_to_provider"

    EntityIntegrationMapping:
      type: object
      properties:
        id:
          type: string
          description: Entity integration mapping ID
          example: "eim_01K1D4YZR7XD15BW6WXD6N3EE4"
        entity_id:
          type: string
          description: FlexPrice entity ID
          example: "cust_123"
        entity_type:
          type: string
          description: Entity type
          enum: [customer, plan, invoice, subscription, payment]
          example: "customer"
        provider_type:
          type: string
          description: Provider type
          enum: [stripe, razorpay, paypal]
          example: "stripe"
        provider_entity_id:
          type: string
          description: Provider entity ID
          example: "cus_stripe_456"
        metadata:
          type: object
          description: Additional provider-specific data
          example:
            stripe_customer_email: "user@example.com"
            sync_direction: "flexprice_to_provider"
        tenant_id:
          type: string
          description: Tenant ID
          example: "tenant_123"
        environment_id:
          type: string
          description: Environment ID
          example: "env_456"
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-15T10:30:00Z"
        created_by:
          type: string
          description: User who created the mapping
          example: "user_123"
        updated_by:
          type: string
          description: User who last updated the mapping
          example: "user_123"
        status:
          type: string
          description: Mapping status
          enum: [active, inactive, deleted]
          example: "active"

    EntityIntegrationMappingResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        entity_integration_mapping:
          $ref: '#/components/schemas/EntityIntegrationMapping'

    ListEntityIntegrationMappingsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        entity_integration_mappings:
          type: array
          items:
            $ref: '#/components/schemas/EntityIntegrationMapping'
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of mappings
              example: 150
            limit:
              type: integer
              description: Number of results per page
              example: 20
            offset:
              type: integer
              description: Current offset
              example: 0
            has_more:
              type: boolean
              description: Whether there are more results
              example: true

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            message:
              type: string
              description: Error message
              example: "Entity integration mapping not found"
            details:
              type: object
              description: Additional error details
              example:
                id: "eim_01K1D4YZR7XD15BW6WXD6N3EE4"
            internal_error:
              type: string
              description: Internal error details (only in development)
              example: "database connection failed"

tags:
  - name: Entity Integration Mappings
    description: Operations for managing entity integration mappings 